priority -50

#################
#  My Snippets  #
#################

global !p
import vim
import re
try:
		kLineWidth = int(vim.eval('&colorcolumn').split(',')[0]) - 1
except:
		kLineWidth = 79

kPythonIndent = 4
kIndent				= ' '*kPythonIndent
kCamel2Words  = re.compile('((?<=[a-z0-9])[A-Z]|(?!^)[A-Z](?=[a-z]))')
kC2WFirstCap	= re.compile('(.)([A-Z][a-z]+)')
kC2WSecondCap = re.compile('(.)([A-Z][a-z]+)')

def camel2words( string ):
	return kCamel2Words.sub(r',\1', string ).lower().split(',')

def cond(snip, cond, val, default=''):
	snip.rv = val if cond else default


endglobal

snippet sep "separator" b
`!p snip.rv = '"{0}//'.format( '-'*((kLineWidth-3)-len(snip.indent) ) )`$0
endsnippet

snippet dsep "double separator" b
`!p snip.rv = '"{0}'.format( '='*((kLineWidth-1)-len(snip.indent) ) )`$0
endsnippet

###########################################################################
#                            SnipMate Snippets                            #
###########################################################################
snippet header
" File: ${1:`!v expand('%:t')`}
" Author: ${2:`!v g:snips_author`}
" Description: ${3}
${4:" Last Modified: `!v strftime("%B %d, %Y")`}

$0
endsnippet

snippet gvar "Global / configuration variable"
if !exists("g:${1:MyUltraImportantVar}")
	let g:$1 = ${2:"${3:<tab>}"}
endif
endsnippet

snippet guard
if exists('${1:did_`!p snip.rv = snip.fn.replace('.','_')`}') || &cp${2: || version < 700}
	finish
endif
let $1 = 1${3}
endsnippet

snippet f
fun ${1:function_name}(${2})
	${3:" code}
endf
endsnippet

snippet for
for ${1:needle} in ${2:haystack}
	${3:" code}
endfor
endsnippet

snippet wh
while ${1:condition}
	${2:" code}
endw
endsnippet

snippet if
if ${1:condition}
	${2:" code}
endif
endsnippet

snippet ife
if ${1:condition}
	${2}
else
	${3}
endif
endsnippet

# vim:ft=snippets:
